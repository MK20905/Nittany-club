# -*- coding: utf-8 -*-
"""Neural Network Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14eEp307eO4AXLXwIQLk2mAeZEAkEzach
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers
import matplotlib.pyplot as plt


(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()


x_train = x_train / 255.0
x_test = x_test / 255.0


plt.imshow(x_train[0], cmap='gray')
plt.show()


model = tf.keras.Sequential()
model.add(layers.Flatten(input_shape=(28, 28)))
model.add(layers.Dense(128, activation='relu'))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(10, activation='softmax'))
model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=5)
number_of_images = 5
probabilities = model.predict(x_train[:number_of_images])
predictions = np.argmax(probabilities, axis=1)

for index in range(len(probabilities)):
    plt.imshow(x_train[index], cmap='gray')
    plt.show()
    print("Prediction: ", predictions[index])

predictions_test = model.predict(x_test)
predictions_test = np.argmax(predictions_test, axis=1)

incorrect_indexes = np.where(predictions_test != y_test)[0]
for i in incorrect_indexes[:5]:
    plt.imshow(x_test[i], cmap='gray')
    plt.show()
    print(f"True label: {y_test[i]}, Predicted: {predictions_test[i]}")